Обработка ошибок и исключений

1. Режим вывода ошибок

Уберите полностью показ ошибок.
Совершите умышленно синтаксическую ошибку и убедитесь, что PHP ничего не напишет.
Поставьте показ ошибок обратно, а также установите вывод всех ошибок через: error_reporting(E_ALL);
Убедитесь, что синтаксическая ошибка, допущенная во 2-м пункте, появилась.

2. Оператор @

Создайте переменную $a, которой присвойте значение переменной b (которая не существует).
Убедитесь, что появился Notice.
Добавьте @ так, чтобы Notice исчез.

3. Оператор try-catch-finally

Создайте класс Valid, в котором реализуйте статический метод validEmail($email). Метод validEmail() должен выбрасывать следующие исключения: пустая строка – исключение с message «E-mail не указан», некорректный e-mail (не прошёл проверку в регулярном выражении) – исключение «E-mail указан неправильно», длина e-mail больше 255 символов – исключение «Слишком длинный e-mail». Если всё хорошо, то метод возвращает true.
Вызовите метод validEmail(), передавая ему разные параметры, а также перехватывайте и выводите исключения.
Примечание: Обратите внимание, что в методе validEmail() лишь выбрасываются исключения, а уже обработка (то есть блок try-catch) должна быть там, где вызывается этот метод.

4. Класс Exception

Создайте 3 класса, наследующих Exception: EmptyException – класс-исключение, который будет создаваться при передаче пустого параметра, LongException – класс-ислючение, который будет создаваться при передаче слишком длинного параметра и InvalidException – класс-исключение, который будет создаваться при передаче некорректного параметра.
Переделайте предыдущее упражнение, выбрасывая исключения не класса Exception, а исключения, которые были созданы в 1-м пункте.

5. Класс Error

Изучите в справочнике класс Error: http://php.net/manual/ru/class.error.php
Вызовите 4 любых метода у объекта класса Error внутри блока catch, написанного в самом уроке.