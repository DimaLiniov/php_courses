Расширения PHP

1. Разбор файла php.ini

2. Проверка данных на валидность

Создайте класс Valid, в котором сделайте статические методы validEmail($email) и validURL($url).
Реализация этих методов должна быть следующей: данные пустые – выброс исключения, данные некорректные – выброс исключения, данные правильные – возврат true.
Проверьте на различные входные параметры созданные методы.
Примечание: Для корректности проверки Email и URL используйте filter_var().

3. Работа с изображениями. Основы

Найдите у себя на компьютере какое-нибудь изображение.
Выведите размеры выбранного изображения в браузер, используя функции imageSX() и imageSY().
Выведите само изображение в браузер (разумеется, без использования тега <img />).

4. Работа с изображениями. Графические примитивы

Нарисуйте человечка (голова, туловище, руки ноги, глаза, рот, нос, уши).
Раскрасьте его соответствующими цветами.
Выведите его в браузер и сохраните его в файл.

5. Работа с изображениями. Текст

Случайным образом сгенерируйте строку из 4-х символов.
На основании этой строки создайте капчу.
Как можно сильнее попытайтесь усложнить её для роботов: поворачивайте символ на угол, сливайте с цветом фона, добавьте на фон множество случайно расположенных пикселей.
В итоге, должно получиться изображение, код на котором способен прочитать человек, и в то же время роботам это будет сделать крайне затруднительно.

6. Работа с cURL

Возьмите любой Интернет-магазин, например, с ноутбуками.
Используя cURL, а также регулярные выражения, получите данные о 100 ноутбуках (скорее всего, придётся перемещаться по страницам на сайте). Необходимые данные: модель, цена, операционная система.
Сохраните все эти данные в текстовый файл.
Примечание: Это хоть и достаточно сложное упражнение, но безумно полезное. Оно научит Вас правильно парсить сайты и собирать с них необходимую информацию, а также сохранять её для последующего анализа и использования.

7. Другие расширения