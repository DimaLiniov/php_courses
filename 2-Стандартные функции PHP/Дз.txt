Стандартные функции PHP

1. Математические функции

Создайте массив с какими-то ценами, например: 50.25, 20.38, 50.78, 75.75, 50.
Создайте массив с новыми ценами, где будут цены со скидкой 23%.
Добавьте округление до двух цифр после запятой, чтобы не было таких цен: 58.3275.
Выведите массив.
Создайте форму, где пользователь должен будет ввести 2 числа.
Сгенерируйте и выведите случайное число в диапазоне между числами, введёнными пользователем.

2. Строковые функции

Создайте форму с текстовой областью и текстовым полем.
Выведите длину строки из текстовой области.
Выведите всю строку из текстовой области, а те места, где есть совпадение с тем, что совпадает со строкой из текстового поля, выделите тегом <b>.
Примечание: Например, пользователь ввёл: «Моя строка – это очень длинная строка» и «строка». Должно появиться следующее: «Моя строка – это очень длинная строка»

3. Функции для работы с массивами

Создайте массив из нескольких чисел.
Выведите случайный элемент из этого массива, используя mt_rand().
Сделайте задачу из пункта 2, но с использованием shuffle().
Создайте двумерный массив с сотрудниками, где каждый сотрудник будет представлять из себя ассоциативный массив с именем и возрастом.
Сделайте сортировку массива с помощью uasort() так, чтобы все сотрудники были отсортированы по возрасту, например, по возрастанию.

4. Функции для работы с датой и временем

Узнайте, сколько времени у Вас будет выполняться такой скрипт: <?php for($i = 0; $i < 10**7; $i++); ?>
Возьмите текущее время от функции time() и прибавьте к нему случайное значение десятков тысяч секунд. Примерно так: time() + mt_rand(1, 10) * 10000;
Выведите текущую дату и конечную из 2-го пункта с помощью функции date().
Выведите, сколько осталось часов, минут и секунд до от текущей даты до той, что получилась во 2-м пункте.
Выведите форму со списком (select), где пользователь сможет выбрать часовой пояс. Добавьте 3 часовых пояса.
Выведите время на сервере и время, которое сейчас у пользователя на основе того часового пояса, который он выбрал.

5. Функции для работы с файлами

Создать форму с текстовой областью и тремя кнопками: «Сохранить», «Загрузить» и «Удалить».
Если пользователь вводит в текстовую область какой-то текст и жмёт кнопку «Сохранить», то данный текст должен быть сохранён в текстовый файл на сервере, а у пользователя должна появиться строка: «Сохранение прошло успешно».
При нажатии кнопки «Загрузить» в текстовой области должен появиться текст, который был записан до этого в файл. Если файла не существует, то вывести строку: «Файл не существует».
При нажатии кнопки «Удалить» файл должен быть удалён, а у пользователя должна появиться строка: «Файл успешно удалён». Если файла не существует, то вывести строку: «Файл не существует».

6. Парсинг INI-файлов

Создайте INI-файл, где укажите цвет текста и его размер.
Создайте простую HTML-страницу (обязательно с DOCTYPE и всеми базовыми HTML-тегами: html, head, body).
Добавьте пару абзацев с помощью тега <p>.
Получите данные из INI-файла и подставьте их внутри тега <style>, чтобы у текста внутри тега <p> был соответствующий цвет и размер.
* Создайте 2 языковых файла ru.ini и en.ini, где будут языковые константы и их перевод. Например, TITLE=Заголовок – в ru.ini, и TITLE=Title – в en.ini. Далее нужно проанализировать массив $_SERVER и узнать, какой язык предпочтительнее у пользователя. И вывести TITLE из того файла, который будет соответствовать языку пользователя. При этом если задать GET-параметр: lang=ru или lang=en – должно выводиться соответствующее представление языковой константы TITLE, независимо от того, что находится в массиве $_SERVER.

7. Права доступа к файлам

Сделайте блокировку скрипта, как в уроке.
Добейтесь того, чтобы увидеть: «Script is already running»
Примечание: Используйте sleep() и/или длинные циклы.

8. Функции для работы с каталогами

Создайте через PHP 5 директорий со случайными именами (например, с помощью функции uniqid()) рядом с index.php, где и запускается скрипт.
Зайдите случайным образом в любую из директории с помощью PHP и создайте там файл со случайным названием.
Проверьте всё это.
Удалите всё, что было создано в 1-м и 2-м пункте через PHP.

9. Функции для работы с DNS

Выведите IP-адрес домена google.ru.
Выведите имя хоста по IP-адресу из 1-го пункта.

10. Запуск внешних программ

Создайте форму, куда пользователь будет вводить путь к текстовому файлу на сервере.
Данный файл должен быть открыт в «Блокноте» (или любом другом текстовом редакторе по умолчанию) с помощью скрипта.

11. Регулярные выражения. Часть 1

Напишите регулярное выражение, которое будет пропускать следующие строки: «57abc», «a7cdc» и «A889c», и не пропускать следующие строки: «/7abc», «57abd».

12. Регулярные выражения. Часть 2

Создайте переменную с текущей датой с помощью функции date(“Y.m.d H:i:s”).
Напишите регулярное выражение, которое разберёт эту строку на части (год, месяц, день, час, минута, секунда) и поместит их в массив совпадений.
Выведите массив с помощью функции print_r() и проверьте всё тщательно.

13. Регулярные выражения. Часть 3

Напишите регулярное выражение для поисках ссылок в тексте.
Сделайте замену всех ссылок в некоторой строке на «Ссылки запрещены».
* Если ссылка совпадает с адресом Вашего сайта, то её не заменять.
Примечание: Полная аналогия с уроком, только заменяются не e-mail, а именно ссылки.

14. Функция phpinfo()

Вызовите функцию phpinfo() и изучите её результат.